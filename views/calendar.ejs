<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <title>Calendario FUNDAL</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <!-- Bootstrap + Estilos -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="/css/calendarStyles.css" rel="stylesheet">

  <style>
    .day-cell { position: relative; cursor: pointer; }
    .day-cell:hover { background: #f6f8ff; }
    .day-dot {
      position: absolute; bottom: 6px; left: 50%; transform: translateX(-50%);
      width: 6px; height: 6px; border-radius: 50%; background: #0d6efd;
    }
    .day-selected { outline: 2px solid #0d6efd; outline-offset: -2px; background: #eef4ff; }
    .agenda-card { position: sticky; top: 16px; }
    .agenda-empty { color:#6c757d; font-style: italic; }
    .agenda-item + .agenda-item { border-top: 1px dashed #e5e7eb; }
    .agenda-time { font-size: .85rem; color:#6c757d; }
  </style>
</head>
<body>
  <div class="container mt-4">
    <div class="row g-4">
      <!-- Columna izquierda: Calendario -->
      <div class="col-lg-8">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <button class="btn btn-outline-secondary" onclick="cambiarMes(-1)">‚Üê Anterior</button>
          <h4 id="titulo-mes" class="m-0"></h4>
          <button class="btn btn-outline-secondary" onclick="cambiarMes(1)">Siguiente ‚Üí</button>
        </div>

        <div id="calendar" class="calendar"></div>
      </div>

      <!-- Columna derecha: Agenda del d√≠a + acciones -->
      <div class="col-lg-4">
        <div class="card agenda-card shadow-sm">
          <div class="card-header bg-primary text-white">
            <div class="d-flex align-items-center justify-content-between">
              <strong>üìå Agenda del d√≠a</strong>
              <small id="agenda-fecha"></small>
            </div>
          </div>
          <div class="card-body" id="agenda-lista">
            <p class="agenda-empty m-0">Selecciona un d√≠a del calendario.</p>
          </div>
          <div class="card-footer d-flex gap-2">
            <button class="btn btn-success flex-fill" id="btnAgregarEvento" disabled data-bs-toggle="modal" data-bs-target="#modalEvento">
              ‚ûï Agregar Evento
            </button>
            <button class="btn btn-outline-primary flex-fill" id="btnAgregarNota" disabled data-bs-toggle="modal" data-bs-target="#modalNota">
              üìù Agregar Nota
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- MODAL: Crear Evento -->
  <div class="modal fade" id="modalEvento" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <form class="modal-content" action="/calendar/evento" method="POST">
        <div class="modal-header bg-success text-white">
          <h5 class="modal-title">Nuevo evento</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" name="fecha" id="evento-fecha">
          <p class="mb-2"><strong>Fecha:</strong> <span id="evento-fecha-texto"></span></p>

          <div class="mb-3">
            <label class="form-label">Hora (opcional)</label>
            <input type="time" class="form-control" name="hora">
          </div>

          <div class="mb-3">
            <label class="form-label">T√≠tulo *</label>
            <input type="text" class="form-control" name="titulo" required>
          </div>

          <div class="mb-3">
            <label class="form-label">Descripci√≥n</label>
            <textarea class="form-control" name="descripcion" rows="2"></textarea>
          </div>
        </div>
        <div class="modal-footer">
          <button class="btn btn-success">Guardar Evento</button>
        </div>
      </form>
    </div>
  </div>

  <!-- MODAL: Crear Nota -->
  <div class="modal fade" id="modalNota" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <form class="modal-content" id="notaForm" action="/calendar/nota" method="POST">
        <div class="modal-header bg-primary text-white">
          <h5 class="modal-title">Nueva nota</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" name="fecha" id="nota-fecha">
          <p class="mb-2"><strong>Fecha:</strong> <span id="nota-fecha-texto"></span></p>

          <div class="mb-3">
            <label class="form-label">Hora del recordatorio (opcional)</label>
            <input type="time" class="form-control" name="hora">
          </div>

          <div class="mb-3">
            <label class="form-label">Nota *</label>
            <textarea class="form-control" name="nota" id="notaTexto" rows="3" required></textarea>
          </div>
        </div>
        <div class="modal-footer">
          <button class="btn btn-primary">Guardar Nota</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Bootstrap -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
  function ymdFromDateLocal(d) {
    const y = d.getFullYear();
    const m = String(d.getMonth() + 1).padStart(2, '0');
    const day = String(d.getDate()).padStart(2, '0');
    return `${y}-${m}-${day}`;
  }
  function dateFromYMD(ymd) {
    const [y, m, d] = ymd.split('-').map(Number);
    return new Date(y, m - 1, d);
  }

  // üîß FIX: normaliza "YYYY-MM-DD", "YYYY-MM-DDTHH..." o "YYYY-MM-DD HH..."
  function safeDateStr(value) {
    if (!value) return null;
    if (value instanceof Date) return ymdFromDateLocal(value);
    const s = String(value).trim();
    if (s.includes('T')) return s.split('T')[0];
    if (s.includes(' ')) return s.split(' ')[0];
    return s.slice(0, 10); // por si viene sin separadores raros
  }

  const RAW_EVENTOS = <%- JSON.stringify(eventos || []) %>;
  const RAW_NOTAS   = <%- JSON.stringify(notas   || []) %>;

  const DATA_EVENTOS = RAW_EVENTOS.map(e => ({
    date: safeDateStr(e.fecha),
    title: e.titulo,
    descripcion: e.descripcion || ''
  }));
  const DATA_NOTAS = RAW_NOTAS.map(n => ({
    date: safeDateStr(n.fecha), // ahora s√≠ quedar√° "YYYY-MM-DD"
    text: n.nota,
    hora: n.hora || null
  }));
</script>


<script>
  const calendarEl = document.getElementById('calendar');
  const tituloMes = document.getElementById('titulo-mes');
  const agendaFecha = document.getElementById('agenda-fecha');
  const agendaLista = document.getElementById('agenda-lista');
  const btnEvento = document.getElementById('btnAgregarEvento');
  const btnNota = document.getElementById('btnAgregarNota');
  const eventoFecha = document.getElementById('evento-fecha');
  const eventoFechaTxt = document.getElementById('evento-fecha-texto');
  const notaFecha = document.getElementById('nota-fecha');
  const notaFechaTxt = document.getElementById('nota-fecha-texto');

  let fechaActual = new Date();
  let fechaSeleccionada = null; // YYYY-MM-DD

  function renderizarCalendario() {
    calendarEl.innerHTML = '';

    const year = fechaActual.getFullYear();
    const month = fechaActual.getMonth();
    const today = new Date();

    const monthStart = new Date(year, month, 1);
    const monthEnd = new Date(year, month + 1, 0);
    const startDay = (monthStart.getDay() + 6) % 7; // Lunes = 0

    // Encabezados
    const dayNames = ['Lun', 'Mar', 'Mi√©', 'Jue', 'Vie', 'S√°b', 'Dom'];
    dayNames.forEach(d => {
      const header = document.createElement('div');
      header.className = 'day-header';
      header.textContent = d;
      calendarEl.appendChild(header);
    });

    // D√≠as vac√≠os
    for (let i = 0; i < startDay; i++) {
      const empty = document.createElement('div');
      empty.className = 'day-cell';
      calendarEl.appendChild(empty);
    }

    // D√≠as del mes
    for (let day = 1; day <= monthEnd.getDate(); day++) {
      const dateStr = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;
      const cell = document.createElement('div');
      cell.className = 'day-cell';
      cell.textContent = day;

      const isToday = day === today.getDate() && month === today.getMonth() && year === today.getFullYear();
      if (isToday) cell.classList.add('today');

      if (tieneContenido(dateStr)) {
        const dot = document.createElement('span');
        dot.className = 'day-dot';
        cell.appendChild(dot);
      }

      cell.addEventListener('click', () => {
        seleccionarDia(dateStr, cell);
      });

      calendarEl.appendChild(cell);
    }

    tituloMes.textContent = fechaActual
      .toLocaleString('es-ES', { month: 'long', year: 'numeric' })
      .toUpperCase();

    const defaultDate = new Date();
    const defaultStr = (defaultDate.getMonth() === month && defaultDate.getFullYear() === year)
      ? ymdFromDateLocal(defaultDate)
      : `${year}-${String(month+1).padStart(2,'0')}-01`;

    const celdas = calendarEl.querySelectorAll('.day-cell');
    const offset = startDay;
    const dayNum = parseInt(defaultStr.split('-')[2], 10);
    const idx = offset + dayNum - 1;
    const cellDefault = celdas[idx];
    if (cellDefault) seleccionarDia(defaultStr, cellDefault, false);
  }

  function cambiarMes(valor) {
    fechaActual.setMonth(fechaActual.getMonth() + valor);
    renderizarCalendario();
  }

  function seleccionarDia(dateStr, cellEl, focusButtons = true) {
    calendarEl.querySelectorAll('.day-cell.day-selected').forEach(c => c.classList.remove('day-selected'));
    cellEl.classList.add('day-selected');

    fechaSeleccionada = dateStr;
    renderAgenda(dateStr);

    btnEvento.disabled = false;
    btnNota.disabled = false;

    eventoFecha.value = dateStr;
    eventoFechaTxt.textContent = dateStr;

    notaFecha.value = dateStr;
    notaFechaTxt.textContent = dateStr;

    if (focusButtons) btnEvento.focus();
  }

  function renderAgenda(dateStr) {
    agendaFecha.textContent = dateFromYMD(dateStr)
      .toLocaleDateString('es-ES', { weekday:'long', year:'numeric', month:'long', day:'numeric' });

    const eventosDelDia = DATA_EVENTOS.filter(e => e.date === dateStr);
    const notasDelDia = DATA_NOTAS.filter(n => n.date === dateStr);

    agendaLista.innerHTML = '';

    if (eventosDelDia.length === 0 && notasDelDia.length === 0) {
      agendaLista.innerHTML = '<p class="agenda-empty m-0">No hay nada para este d√≠a.</p>';
      return;
    }

    if (eventosDelDia.length > 0) {
      const h = document.createElement('h6');
      h.className = 'text-primary';
      h.textContent = 'Eventos';
      agendaLista.appendChild(h);

      eventosDelDia.forEach(ev => {
        const item = document.createElement('div');
        item.className = 'agenda-item py-2';
        item.innerHTML = `<div class="fw-semibold">üìÖ ${ev.title}</div>${ev.descripcion ? `<div class="small text-muted">${ev.descripcion}</div>` : ''}`;
        agendaLista.appendChild(item);
      });
    }

    if (notasDelDia.length > 0) {
      const h2 = document.createElement('h6');
      h2.className = 'text-success mt-3';
      h2.textContent = 'Notas personales';
      agendaLista.appendChild(h2);

      notasDelDia.sort((a,b) => (a.hora || '00:00').localeCompare(b.hora || '00:00'));
      notasDelDia.forEach(nt => {
        const item = document.createElement('div');
        item.className = 'agenda-item py-2';
        item.innerHTML = `<div>${nt.text}</div>${nt.hora ? `<div class="agenda-time">‚è∞ ${nt.hora}</div>` : ''}`;
        agendaLista.appendChild(item);
      });
    }
  }

  function tieneContenido(dateStr) {
    return DATA_EVENTOS.some(e => e.date === dateStr) || DATA_NOTAS.some(n => n.date === dateStr);
  }

  renderizarCalendario();
</script>
</body>
</html>
